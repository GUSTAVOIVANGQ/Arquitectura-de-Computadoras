vendor_name = ModelSim
source_file = 1, C:/Users/ivan/Documents/GitHub/Arquitectura-de-Computadoras/Practices/Practice_4_Arquitecture/stack_8bit.vhd
source_file = 1, stack_tb.vhd
source_file = 1, C:/Users/ivan/Documents/GitHub/Arquitectura-de-Computadoras/Practices/Practice_4_Arquitecture/db/stack_8bit.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = stack_8bit
instance = comp, \data_out[0]~output\, data_out[0]~output, stack_8bit, 1
instance = comp, \data_out[1]~output\, data_out[1]~output, stack_8bit, 1
instance = comp, \data_out[2]~output\, data_out[2]~output, stack_8bit, 1
instance = comp, \data_out[3]~output\, data_out[3]~output, stack_8bit, 1
instance = comp, \data_out[4]~output\, data_out[4]~output, stack_8bit, 1
instance = comp, \data_out[5]~output\, data_out[5]~output, stack_8bit, 1
instance = comp, \data_out[6]~output\, data_out[6]~output, stack_8bit, 1
instance = comp, \data_out[7]~output\, data_out[7]~output, stack_8bit, 1
instance = comp, \full~output\, full~output, stack_8bit, 1
instance = comp, \empty~output\, empty~output, stack_8bit, 1
instance = comp, \clk~input\, clk~input, stack_8bit, 1
instance = comp, \push~input\, push~input, stack_8bit, 1
instance = comp, \pop~input\, pop~input, stack_8bit, 1
instance = comp, \pointer[2]~4\, pointer[2]~4, stack_8bit, 1
instance = comp, \pointer[2]~5\, pointer[2]~5, stack_8bit, 1
instance = comp, \reset~input\, reset~input, stack_8bit, 1
instance = comp, \pointer[2]\, pointer[2], stack_8bit, 1
instance = comp, \pointer[1]~2\, pointer[1]~2, stack_8bit, 1
instance = comp, \pointer[1]~6\, pointer[1]~6, stack_8bit, 1
instance = comp, \pointer[1]\, pointer[1], stack_8bit, 1
instance = comp, \process_0~0\, process_0~0, stack_8bit, 1
instance = comp, \Equal1~0\, Equal1~0, stack_8bit, 1
instance = comp, \pointer~3\, pointer~3, stack_8bit, 1
instance = comp, \pointer[0]\, pointer[0], stack_8bit, 1
instance = comp, \peek~input\, peek~input, stack_8bit, 1
instance = comp, \data_out~19\, data_out~19, stack_8bit, 1
instance = comp, \data_out~20\, data_out~20, stack_8bit, 1
instance = comp, \data_in[0]~input\, data_in[0]~input, stack_8bit, 1
instance = comp, \Decoder0~6\, Decoder0~6, stack_8bit, 1
instance = comp, \stack[6][0]\, stack[6][0], stack_8bit, 1
instance = comp, \Decoder0~5\, Decoder0~5, stack_8bit, 1
instance = comp, \stack[5][0]\, stack[5][0], stack_8bit, 1
instance = comp, \Decoder0~4\, Decoder0~4, stack_8bit, 1
instance = comp, \stack[4][0]\, stack[4][0], stack_8bit, 1
instance = comp, \data_out~18\, data_out~18, stack_8bit, 1
instance = comp, \data_out~50\, data_out~50, stack_8bit, 1
instance = comp, \Add1~0\, Add1~0, stack_8bit, 1
instance = comp, \Decoder0~0\, Decoder0~0, stack_8bit, 1
instance = comp, \stack[1][0]\, stack[1][0], stack_8bit, 1
instance = comp, \Decoder0~3\, Decoder0~3, stack_8bit, 1
instance = comp, \stack[0][0]\, stack[0][0], stack_8bit, 1
instance = comp, \Decoder0~1\, Decoder0~1, stack_8bit, 1
instance = comp, \stack[3][0]\, stack[3][0], stack_8bit, 1
instance = comp, \Decoder0~2\, Decoder0~2, stack_8bit, 1
instance = comp, \stack[2][0]\, stack[2][0], stack_8bit, 1
instance = comp, \data_out~16\, data_out~16, stack_8bit, 1
instance = comp, \data_out~17\, data_out~17, stack_8bit, 1
instance = comp, \data_out~21\, data_out~21, stack_8bit, 1
instance = comp, \data_in[1]~input\, data_in[1]~input, stack_8bit, 1
instance = comp, \stack[3][1]~feeder\, stack[3][1]~feeder, stack_8bit, 1
instance = comp, \stack[3][1]\, stack[3][1], stack_8bit, 1
instance = comp, \stack[2][1]\, stack[2][1], stack_8bit, 1
instance = comp, \data_out~23\, data_out~23, stack_8bit, 1
instance = comp, \stack[0][1]\, stack[0][1], stack_8bit, 1
instance = comp, \stack[1][1]~feeder\, stack[1][1]~feeder, stack_8bit, 1
instance = comp, \stack[1][1]\, stack[1][1], stack_8bit, 1
instance = comp, \data_out~24\, data_out~24, stack_8bit, 1
instance = comp, \stack[5][1]\, stack[5][1], stack_8bit, 1
instance = comp, \stack[4][1]~feeder\, stack[4][1]~feeder, stack_8bit, 1
instance = comp, \stack[4][1]\, stack[4][1], stack_8bit, 1
instance = comp, \data_out~22\, data_out~22, stack_8bit, 1
instance = comp, \stack[6][1]\, stack[6][1], stack_8bit, 1
instance = comp, \data_out~51\, data_out~51, stack_8bit, 1
instance = comp, \data_out~25\, data_out~25, stack_8bit, 1
instance = comp, \data_in[2]~input\, data_in[2]~input, stack_8bit, 1
instance = comp, \stack[1][2]~feeder\, stack[1][2]~feeder, stack_8bit, 1
instance = comp, \stack[1][2]\, stack[1][2], stack_8bit, 1
instance = comp, \stack[0][2]\, stack[0][2], stack_8bit, 1
instance = comp, \stack[2][2]\, stack[2][2], stack_8bit, 1
instance = comp, \stack[3][2]~feeder\, stack[3][2]~feeder, stack_8bit, 1
instance = comp, \stack[3][2]\, stack[3][2], stack_8bit, 1
instance = comp, \data_out~27\, data_out~27, stack_8bit, 1
instance = comp, \data_out~28\, data_out~28, stack_8bit, 1
instance = comp, \stack[5][2]\, stack[5][2], stack_8bit, 1
instance = comp, \stack[4][2]~feeder\, stack[4][2]~feeder, stack_8bit, 1
instance = comp, \stack[4][2]\, stack[4][2], stack_8bit, 1
instance = comp, \data_out~26\, data_out~26, stack_8bit, 1
instance = comp, \stack[6][2]~feeder\, stack[6][2]~feeder, stack_8bit, 1
instance = comp, \stack[6][2]\, stack[6][2], stack_8bit, 1
instance = comp, \data_out~52\, data_out~52, stack_8bit, 1
instance = comp, \data_out~29\, data_out~29, stack_8bit, 1
instance = comp, \data_in[3]~input\, data_in[3]~input, stack_8bit, 1
instance = comp, \stack[1][3]~feeder\, stack[1][3]~feeder, stack_8bit, 1
instance = comp, \stack[1][3]\, stack[1][3], stack_8bit, 1
instance = comp, \stack[0][3]\, stack[0][3], stack_8bit, 1
instance = comp, \stack[2][3]\, stack[2][3], stack_8bit, 1
instance = comp, \stack[3][3]\, stack[3][3], stack_8bit, 1
instance = comp, \data_out~31\, data_out~31, stack_8bit, 1
instance = comp, \data_out~32\, data_out~32, stack_8bit, 1
instance = comp, \stack[6][3]\, stack[6][3], stack_8bit, 1
instance = comp, \stack[5][3]\, stack[5][3], stack_8bit, 1
instance = comp, \stack[4][3]\, stack[4][3], stack_8bit, 1
instance = comp, \data_out~30\, data_out~30, stack_8bit, 1
instance = comp, \data_out~53\, data_out~53, stack_8bit, 1
instance = comp, \data_out~33\, data_out~33, stack_8bit, 1
instance = comp, \data_in[4]~input\, data_in[4]~input, stack_8bit, 1
instance = comp, \stack[6][4]\, stack[6][4], stack_8bit, 1
instance = comp, \stack[5][4]\, stack[5][4], stack_8bit, 1
instance = comp, \stack[4][4]~feeder\, stack[4][4]~feeder, stack_8bit, 1
instance = comp, \stack[4][4]\, stack[4][4], stack_8bit, 1
instance = comp, \data_out~34\, data_out~34, stack_8bit, 1
instance = comp, \data_out~54\, data_out~54, stack_8bit, 1
instance = comp, \stack[1][4]\, stack[1][4], stack_8bit, 1
instance = comp, \stack[0][4]\, stack[0][4], stack_8bit, 1
instance = comp, \stack[2][4]\, stack[2][4], stack_8bit, 1
instance = comp, \stack[3][4]~feeder\, stack[3][4]~feeder, stack_8bit, 1
instance = comp, \stack[3][4]\, stack[3][4], stack_8bit, 1
instance = comp, \data_out~35\, data_out~35, stack_8bit, 1
instance = comp, \data_out~36\, data_out~36, stack_8bit, 1
instance = comp, \data_out~37\, data_out~37, stack_8bit, 1
instance = comp, \data_in[5]~input\, data_in[5]~input, stack_8bit, 1
instance = comp, \stack[5][5]\, stack[5][5], stack_8bit, 1
instance = comp, \stack[4][5]~feeder\, stack[4][5]~feeder, stack_8bit, 1
instance = comp, \stack[4][5]\, stack[4][5], stack_8bit, 1
instance = comp, \data_out~38\, data_out~38, stack_8bit, 1
instance = comp, \stack[6][5]\, stack[6][5], stack_8bit, 1
instance = comp, \data_out~55\, data_out~55, stack_8bit, 1
instance = comp, \stack[1][5]\, stack[1][5], stack_8bit, 1
instance = comp, \stack[0][5]\, stack[0][5], stack_8bit, 1
instance = comp, \stack[2][5]\, stack[2][5], stack_8bit, 1
instance = comp, \stack[3][5]\, stack[3][5], stack_8bit, 1
instance = comp, \data_out~39\, data_out~39, stack_8bit, 1
instance = comp, \data_out~40\, data_out~40, stack_8bit, 1
instance = comp, \data_out~41\, data_out~41, stack_8bit, 1
instance = comp, \data_in[6]~input\, data_in[6]~input, stack_8bit, 1
instance = comp, \stack[6][6]\, stack[6][6], stack_8bit, 1
instance = comp, \stack[5][6]\, stack[5][6], stack_8bit, 1
instance = comp, \stack[4][6]~feeder\, stack[4][6]~feeder, stack_8bit, 1
instance = comp, \stack[4][6]\, stack[4][6], stack_8bit, 1
instance = comp, \data_out~42\, data_out~42, stack_8bit, 1
instance = comp, \data_out~56\, data_out~56, stack_8bit, 1
instance = comp, \stack[1][6]~feeder\, stack[1][6]~feeder, stack_8bit, 1
instance = comp, \stack[1][6]\, stack[1][6], stack_8bit, 1
instance = comp, \stack[0][6]\, stack[0][6], stack_8bit, 1
instance = comp, \stack[3][6]~feeder\, stack[3][6]~feeder, stack_8bit, 1
instance = comp, \stack[3][6]\, stack[3][6], stack_8bit, 1
instance = comp, \stack[2][6]\, stack[2][6], stack_8bit, 1
instance = comp, \data_out~43\, data_out~43, stack_8bit, 1
instance = comp, \data_out~44\, data_out~44, stack_8bit, 1
instance = comp, \data_out~45\, data_out~45, stack_8bit, 1
instance = comp, \data_in[7]~input\, data_in[7]~input, stack_8bit, 1
instance = comp, \stack[5][7]\, stack[5][7], stack_8bit, 1
instance = comp, \stack[4][7]~feeder\, stack[4][7]~feeder, stack_8bit, 1
instance = comp, \stack[4][7]\, stack[4][7], stack_8bit, 1
instance = comp, \data_out~46\, data_out~46, stack_8bit, 1
instance = comp, \stack[6][7]\, stack[6][7], stack_8bit, 1
instance = comp, \data_out~57\, data_out~57, stack_8bit, 1
instance = comp, \stack[3][7]~feeder\, stack[3][7]~feeder, stack_8bit, 1
instance = comp, \stack[3][7]\, stack[3][7], stack_8bit, 1
instance = comp, \stack[2][7]\, stack[2][7], stack_8bit, 1
instance = comp, \data_out~47\, data_out~47, stack_8bit, 1
instance = comp, \stack[1][7]~feeder\, stack[1][7]~feeder, stack_8bit, 1
instance = comp, \stack[1][7]\, stack[1][7], stack_8bit, 1
instance = comp, \stack[0][7]\, stack[0][7], stack_8bit, 1
instance = comp, \data_out~48\, data_out~48, stack_8bit, 1
instance = comp, \data_out~49\, data_out~49, stack_8bit, 1
instance = comp, \Equal0~0\, Equal0~0, stack_8bit, 1
