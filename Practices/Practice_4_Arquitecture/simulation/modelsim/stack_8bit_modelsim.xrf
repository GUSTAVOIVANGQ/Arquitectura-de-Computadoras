vendor_name = ModelSim
source_file = 1, C:/Users/ivan/Documents/GitHub/Arquitectura-de-Computadoras/Practices/Practice_4_Arquitecture/stack_8bit.vhd
source_file = 1, C:/Users/ivan/Documents/GitHub/Arquitectura-de-Computadoras/Practices/Practice_4_Arquitecture/stack_tb.vhd
source_file = 1, C:/Users/ivan/Documents/GitHub/Arquitectura-de-Computadoras/Practices/Practice_4_Arquitecture/db/stack_8bit.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = stack_8bit
instance = comp, \data_out[0]~output\, data_out[0]~output, stack_8bit, 1
instance = comp, \data_out[1]~output\, data_out[1]~output, stack_8bit, 1
instance = comp, \data_out[2]~output\, data_out[2]~output, stack_8bit, 1
instance = comp, \data_out[3]~output\, data_out[3]~output, stack_8bit, 1
instance = comp, \data_out[4]~output\, data_out[4]~output, stack_8bit, 1
instance = comp, \data_out[5]~output\, data_out[5]~output, stack_8bit, 1
instance = comp, \data_out[6]~output\, data_out[6]~output, stack_8bit, 1
instance = comp, \data_out[7]~output\, data_out[7]~output, stack_8bit, 1
instance = comp, \empty~output\, empty~output, stack_8bit, 1
instance = comp, \full~output\, full~output, stack_8bit, 1
instance = comp, \clk~input\, clk~input, stack_8bit, 1
instance = comp, \clk~inputclkctrl\, clk~inputclkctrl, stack_8bit, 1
instance = comp, \pop~input\, pop~input, stack_8bit, 1
instance = comp, \push~input\, push~input, stack_8bit, 1
instance = comp, \stack_ptr~1\, stack_ptr~1, stack_8bit, 1
instance = comp, \reset~input\, reset~input, stack_8bit, 1
instance = comp, \stack_ptr[0]\, stack_ptr[0], stack_8bit, 1
instance = comp, \stack_ptr~0\, stack_ptr~0, stack_8bit, 1
instance = comp, \stack_ptr[1]\, stack_ptr[1], stack_8bit, 1
instance = comp, \peek~input\, peek~input, stack_8bit, 1
instance = comp, \data_out~0\, data_out~0, stack_8bit, 1
instance = comp, \data_in[0]~input\, data_in[0]~input, stack_8bit, 1
instance = comp, \stack[1][0]~1\, stack[1][0]~1, stack_8bit, 1
instance = comp, \stack[1][0]\, stack[1][0], stack_8bit, 1
instance = comp, \stack[0][0]~0\, stack[0][0]~0, stack_8bit, 1
instance = comp, \stack[0][0]\, stack[0][0], stack_8bit, 1
instance = comp, \data_out~1\, data_out~1, stack_8bit, 1
instance = comp, \stack[2][0]~2\, stack[2][0]~2, stack_8bit, 1
instance = comp, \stack[2][0]\, stack[2][0], stack_8bit, 1
instance = comp, \data_out~2\, data_out~2, stack_8bit, 1
instance = comp, \data_out~3\, data_out~3, stack_8bit, 1
instance = comp, \data_in[1]~input\, data_in[1]~input, stack_8bit, 1
instance = comp, \stack[0][1]~feeder\, stack[0][1]~feeder, stack_8bit, 1
instance = comp, \stack[0][1]\, stack[0][1], stack_8bit, 1
instance = comp, \stack[1][1]\, stack[1][1], stack_8bit, 1
instance = comp, \data_out~4\, data_out~4, stack_8bit, 1
instance = comp, \stack[2][1]\, stack[2][1], stack_8bit, 1
instance = comp, \data_out~5\, data_out~5, stack_8bit, 1
instance = comp, \data_in[2]~input\, data_in[2]~input, stack_8bit, 1
instance = comp, \stack[1][2]\, stack[1][2], stack_8bit, 1
instance = comp, \stack[0][2]~feeder\, stack[0][2]~feeder, stack_8bit, 1
instance = comp, \stack[0][2]\, stack[0][2], stack_8bit, 1
instance = comp, \data_out~6\, data_out~6, stack_8bit, 1
instance = comp, \stack[2][2]\, stack[2][2], stack_8bit, 1
instance = comp, \data_out~7\, data_out~7, stack_8bit, 1
instance = comp, \data_in[3]~input\, data_in[3]~input, stack_8bit, 1
instance = comp, \stack[0][3]~feeder\, stack[0][3]~feeder, stack_8bit, 1
instance = comp, \stack[0][3]\, stack[0][3], stack_8bit, 1
instance = comp, \stack[1][3]\, stack[1][3], stack_8bit, 1
instance = comp, \data_out~8\, data_out~8, stack_8bit, 1
instance = comp, \stack[2][3]\, stack[2][3], stack_8bit, 1
instance = comp, \data_out~9\, data_out~9, stack_8bit, 1
instance = comp, \data_in[4]~input\, data_in[4]~input, stack_8bit, 1
instance = comp, \stack[0][4]~feeder\, stack[0][4]~feeder, stack_8bit, 1
instance = comp, \stack[0][4]\, stack[0][4], stack_8bit, 1
instance = comp, \stack[1][4]\, stack[1][4], stack_8bit, 1
instance = comp, \data_out~10\, data_out~10, stack_8bit, 1
instance = comp, \stack[2][4]\, stack[2][4], stack_8bit, 1
instance = comp, \data_out~11\, data_out~11, stack_8bit, 1
instance = comp, \data_in[5]~input\, data_in[5]~input, stack_8bit, 1
instance = comp, \stack[0][5]~feeder\, stack[0][5]~feeder, stack_8bit, 1
instance = comp, \stack[0][5]\, stack[0][5], stack_8bit, 1
instance = comp, \stack[1][5]\, stack[1][5], stack_8bit, 1
instance = comp, \data_out~12\, data_out~12, stack_8bit, 1
instance = comp, \stack[2][5]\, stack[2][5], stack_8bit, 1
instance = comp, \data_out~13\, data_out~13, stack_8bit, 1
instance = comp, \data_in[6]~input\, data_in[6]~input, stack_8bit, 1
instance = comp, \stack[0][6]\, stack[0][6], stack_8bit, 1
instance = comp, \stack[1][6]\, stack[1][6], stack_8bit, 1
instance = comp, \data_out~14\, data_out~14, stack_8bit, 1
instance = comp, \stack[2][6]\, stack[2][6], stack_8bit, 1
instance = comp, \data_out~15\, data_out~15, stack_8bit, 1
instance = comp, \data_in[7]~input\, data_in[7]~input, stack_8bit, 1
instance = comp, \stack[0][7]~feeder\, stack[0][7]~feeder, stack_8bit, 1
instance = comp, \stack[0][7]\, stack[0][7], stack_8bit, 1
instance = comp, \stack[1][7]\, stack[1][7], stack_8bit, 1
instance = comp, \data_out~16\, data_out~16, stack_8bit, 1
instance = comp, \stack[2][7]\, stack[2][7], stack_8bit, 1
instance = comp, \data_out~17\, data_out~17, stack_8bit, 1
instance = comp, \LessThan0~0\, LessThan0~0, stack_8bit, 1
